# templates/migration-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-db-migration
spec:
  template:
    spec:
      restartPolicy: OnFailure
      {{- with .Values.community.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not .Values.community.config.database.external }}
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
          - /bin/sh
          - -c
          - |
            echo "Waiting for PostgreSQL..."
            until pg_isready -h {{ .Release.Name }}-postgresql -p 5432 -U {{ .Values.community.config.postgresql.username }}; do
              sleep 2
            done
            echo "PostgreSQL is ready"
        {{- with .Values.community.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      containers:
      - name: db-migration
        image: "{{ .Values.community.image.repository }}:{{ .Values.community.image.tag }}"
        command: 
          - /bin/sh
          - -c
          - |
            echo "Running database migrations..."
            export PNPM_HOME=/tmp/.pnpm
            pnpx prisma migrate deploy
        env:
          - name: DATABASE_URL
            {{- if .Values.community.config.database.external }}
            value: {{ .Values.community.config.database.url | quote }}
            {{- else }}
            value: "postgresql://{{ .Values.community.config.postgresql.username }}:{{ .Values.community.config.postgresql.password }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.community.config.postgresql.database }}?schema=public"
            {{- end }}
          {{- with .Values.community.envOverrides }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.community.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}